@mixin response($breakpoint) {
  @if ($breakpoint == xl) {
    @media (min-width: 1200px) {
      @content;
    }
  } @else if($breakpoint == lg) {
    @media (min-width: 992px) {
      @content;
    }
  } @else if($breakpoint == md) {
    @media (min-width: 768px) {
      @content;
    }
  } @else if($breakpoint == sm) {
    @media (min-width: 576px) {
      @content;
    }
  } @else if($breakpoint == xs) {
    @media (min-width: 0px) {
      @content;
    }
  }
}

@mixin navigation($hamburger: false) {
  @include flex($direction: row, $justify: space-between, $align: center);

  @if $hamburger {
    &-list {
      @include flex(column, flex-start, center, 10rem);
      position: fixed;
      width: 100%;
      height: 100%;
      top: 0.01rem;
      padding-top: 20rem;
      left: -200%;
      right: 0.01rem;
      text-align: center;
      transition: all 0.5s;
      gap: 5rem;
      z-index: 100;
      background-image: url("../assets/images/bg-header-mobile.svg");
      background-repeat: no-repeat;
      background-size: cover;
      &-actions {
        @include flex(
          $direction: row,
          $justify: space-around,
          $align: center,
          $gap: 2rem
        );
      }
    }
  } @else {
    &-list {
      @include flex(
        $direction: row,
        $justify: flex-end,
        $align: center,
        $gap: 2.5rem
      );
      position: inherit;
      align-items: center;
      height: 100%;
      padding-top: 0rem;
      background-image: none;
      &-actions {
        @include flex(
          $direction: row,
          $justify: space-around,
          $align: center,
          $gap: 2rem
        );
      }
      &-buttons {
        @include flex(
          $direction: row,
          $justify: center,
          $align: center,
          $gap: 2rem
        );
      }
    }
  }

  &-hamburger {
    @include response(lg) {
      display: none;
    }

    z-index: 200;
    display: block;
    font-size: getFontSize(md);
    cursor: pointer;

    &-lines {
      height: 2em;
      width: 2.5em;

      @include flex(column, space-between);

      border-radius: 50%;
      &-line {
        height: 0.2em;
        width: 100%;
        border-radius: 10px;
        background-color: getColor(intense-violet);

        &-1 {
          transform-origin: 0% 0%;
          transition: transform 0.4s ease-in-out;
        }

        &-2 {
          transition: transform 0.2s ease-in-out;
        }

        &-3 {
          transform-origin: 0% 100%;
          transition: transform 0.4s ease-in-out;
        }
      }
    }
  }

  &-item {
    list-style: none;
  }

  &-link {
    @include navbar_links();

    &-dropdown {
      @include navbar_links();
    }
  }

  &-button-not-focus {
    @include button(md);
  }

  &-button-focus {
    @include button(md, true);
  }
}

@mixin flex($direction: row, $justify: center, $align: center, $gap: 0) {
  display: flex;
  flex-flow: $direction wrap;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
  flex-wrap: nowrap;
}

@mixin button($size: lg, $focus: false, $width: null, $disabled: false) {
  @if $focus {
    color: getColor(white);
    background-color: getColor(intense-violet);
    border: 1px solid getColor(intense-violet);
    background-image: linear-gradient(
      180deg,
      rgba(255, 255, 255, 0.1),
      rgba(255, 255, 255, 0)
    );
  } @else {
    color: getColor(black);
    background-color: transparent;
    border: 1px solid getColor(light-grayish-violet);
  }
  font-size: getFontSize($size);
  transition: $transition;
  border-radius: 10rem;
  padding: 1rem 3rem 1rem 3rem;
  text-decoration: none;
  cursor: pointer;
  &:hover {
    @if $focus {
      background-color: darken(getColor(intense-violet), 5%);
    } @else {
      color: getColor(white);
      border-color: getColor(intense-violet);
      background-color: getColor(intense-violet);
      background-image: linear-gradient(
        180deg,
        rgba(255, 255, 255, 0.1),
        rgba(255, 255, 255, 0)
      );
    }
    transition: $transition;
  }
  @if $width != null {
    width: $width;
  }

  @if $disabled {
    cursor: not-allowed;
    opacity: 0.5;
    &:hover {
      background-color: getColor(intense-violet);
    }
  }
}

@mixin section-titles {
  @include response(xl) {
    font-size: getFontSize(xl);
  }
  background-image: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 255, 255, 0)
  );
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  font-size: getFontSize(md);
  font-family: $font-family-title;
  font-weight: getFontWeight(bold);
  transition: $transition;
  text-align: center;
  background-color: getColor(intense-violet);
  padding-bottom: 2rem;
  padding-top: 10rem;
}

@mixin section-subtitles {
  @include response(xl) {
    font-size: getFontSize(xxxl);
  }
  font-size: getFontSize(xxl);
  font-family: $font-family-title;
  font-weight: getFontWeight(bold);
  transition: $transition;
  text-align: center;
  color: getColor(black);
}

@mixin label {
  @include response(xl) {
    font-size: getFontSize(lg);
  }
  color: getColor(intense-violet);
  font-size: getFontSize(md);
  font-family: $font-family-title;
  font-weight: getFontWeight(bold);
  transition: $transition;
  padding-bottom: 1rem;
}

@mixin input($size: lg) {
  @include response(xl) {
    font-size: getFontSize($size);
  }
  font-size: getFontSize(calc($size - 0.5));
  font-family: $font-family-title;
  font-weight: getFontWeight(bold);
  transition: $transition;
  border: 1px solid getColor(black);
  border-radius: 0.5rem;
  padding: 1rem;

  &:focus {
    outline: none;
    border: 1px solid getColor(intense-violet);
  }
}

@mixin navbar_links() {
  color: getColor(black);
  font-size: getFontSize(lg);
  text-decoration: none;
  transition: $transition;
  padding: 1rem 3rem 1rem 3rem;
  font-weight: getFontWeight(semi-bold);
  cursor: pointer;
  &:hover {
    color: getColor(intense-violet);
    transition: $transition;
  }
}

@mixin card($withHover: true) {
  @include flex(column, center, center);
  background-color: getColor(white);
  border-radius: 1rem;
  box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  transition: $transition;
  cursor: pointer;
  @if $withHover {
    &:hover {
      transform: translateY(-0.5rem);
      box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
      transition: $transition;
    }
  }
}

@mixin deleteInCard() {
  color: getColor(white);
  background-color: #e74c3c;
  border: none;
  flex-grow: 1;
  font-size: getFontSize(xl);
  border-bottom-left-radius: 1rem;
  transition: $transition;
  padding: 1rem 3rem 1rem 3rem;
  text-decoration: none;
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
}

@mixin editInCard() {
  color: getColor(white);
  background-color: #f1c40f;
  border: none;
  flex-grow: 1;
  font-size: getFontSize(xl);
  transition: $transition;
  padding: 1rem 3rem 1rem 3rem;
  text-decoration: none;
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
}

@mixin showInCard() {
  color: getColor(white);
  background-color: #27ae60;
  border: none;
  flex-grow: 1;
  font-size: getFontSize(xl);
  transition: $transition;
  padding: 1rem 3rem 1rem 3rem;
  border-bottom-right-radius: 1rem;
  text-decoration: none;
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
}

@mixin view_header($size: 5rem) {
  @include response(xl) {
    font-size: $size;
  }
  font-size: calc($size / 1.5);
  font-family: $font-family-title;
  font-weight: getFontWeight(bold);
  color: getColor(intense-violet);
  transition: $transition;
  text-align: center;
  padding-bottom: 2rem;
  padding-top: 2rem;
}

@mixin user_button($padding: 1rem) {
  width: 100%;
  height: 10rem;
  border-top-right-radius: 1rem;
  border-bottom-right-radius: 1rem;
  background-image: linear-gradient(
    180deg,
    rgba(255, 255, 255, 0.1),
    rgba(255, 255, 255, 0)
  );
  font-size: getFontSize(xl);
  transition: $transition;
  padding: $padding $padding $padding $padding;
  text-decoration: none;
  background-color: getColor(intense-violet);
  color: getColor(white);
  border: none;
  &:hover {
    background-color: darken(getColor(intense-violet), 5%);
  }
}

@mixin breadcrumbs($margin-left: 3rem) {
  @include flex(
    $direction: row,
    $justify: flex-start,
    $align: center,
    $gap: 1rem
  );
  margin-left: $margin-left;
  margin-top: 2rem;
  &-item {
    margin: 0;
    font-size: getFontSize(md);
    font-family: $font-family-text;
    color: getColor(black);
    text-decoration: none;
    transition: $transition;
    &:hover {
      color: getColor(intense-violet);
    }
  }
}

@mixin normal_delete_button {
  color: getColor(white);
  background-color: #e74c3c;
  border: none;
  font-size: getFontSize(xl);
  border-radius: 10rem;
  transition: $transition;
  padding: 1rem 3rem 1rem 3rem;
  text-decoration: none;
  cursor: pointer;
  &:hover {
    opacity: 0.8;
  }
}

@mixin loader($top: 45%, $left: 40%) {
  display: block;
  height: 6px;
  width: 25vw;
  border-radius: 30px;
  background-color: rgba(0, 0, 0, 0.2);
  position: relative;

  top: $top;
  left: $left;

  &::before {
    content: "";
    position: absolute;
    background: getColor(intense-violet);
    top: 0;
    left: 0;
    width: 0%;
    height: 100%;
    border-radius: 30px;
    animation: moving 1s ease-in-out infinite;
  }

  @keyframes moving {
    50% {
      width: 100%;
    }
  
    100% {
      width: 0;
      right: 0;
      left: unset;
    }
  }
}
